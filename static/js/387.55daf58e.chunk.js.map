{"version":3,"file":"static/js/387.55daf58e.chunk.js","mappings":"mSAEaA,EAAcC,EAAAA,EAAAA,IAAH,4CAIXC,EAAcD,EAAAA,EAAAA,GAAH,mSAaXE,EAAcF,EAAAA,EAAAA,GAAH,oJAOXG,EAAgBH,EAAAA,EAAAA,EAAH,iHAObI,EAAiBJ,EAAAA,EAAAA,EAAH,uF,SCiB3B,EA5CgB,WAEZ,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAsBR,OApBAE,EAAAA,EAAAA,YAAU,WACV,GAAKF,EAAL,CACA,IAAMG,EAAU,mCAAG,gHAEQC,EAAAA,EAAAA,IAAeJ,GAFvB,UAETK,EAFS,OAKgB,KAFzBC,EAAcD,EAASE,SAETC,OALL,0CAMJC,EAAAA,EAAAA,GAAa,2BANT,OASfV,EAAWO,GATI,kDAWfI,QAAQC,IAAR,MAXe,0DAAH,qDAchBR,GAfoB,CAgBnB,GAAE,CAACH,KAIA,SAACT,EAAD,WACA,SAACE,EAAD,UACCK,EAAQc,KAAI,SAAAC,GACT,OACA,UAACnB,EAAD,YACI,UAACC,EAAD,WAAe,YACH,0BAAOkB,EAAOC,aAE1B,SAAClB,EAAD,UAAiBiB,EAAOE,YAJVF,EAAOG,GAO5B,OAKR,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsWrap = styled.div`\n    padding: 20px;\n`;\n\nexport const ReviewsList = styled.ul`\n    display: grid;\n    max-width: 1200px;\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-gap: 16px;\n    margin-top: 20px;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const ReviewsItem = styled.li`\n    background-color: #d2b8f4;\n    border-radius: 8px;\n    padding: 16px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nexport const ReviewsAuthor = styled.p`\n    font-size: 16px;\n    font-weight: bold;\n    color: #333;\n    margin-bottom: 8px;\n`;\n\nexport const ReviewsContent = styled.p`\n    font-size: 14px;\n    color: #666;\n    line-height: 1.4;\n`;\n\n","import { notification } from 'components/Norification/Notification';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsInfo } from 'Services/getMovies';\nimport { ReviewsAuthor, ReviewsContent, ReviewsItem, ReviewsList, ReviewsWrap } from './Reviews.styled';\n\nconst Reviews = () => {\n\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n    if (!movieId) return;\n    const getReviews = async () => {\n        try {\n        const response = await getReviewsInfo(movieId);\n        const movieReview = response.results;\n            \n            if (movieReview.length === 0) {\n            return notification(`No reviews were found!`);\n            }\n            \n        setReviews(movieReview);\n        } catch (error) {\n        console.log(error);\n        }\n    };\n    getReviews();\n    }, [movieId]);\n\n\n    return (\n        <ReviewsWrap>\n        <ReviewsList>\n        {reviews.map(review => {\n            return (\n            <ReviewsItem key={review.id}>\n                <ReviewsAuthor>\n                    Author: <span>{review.author}</span>\n                </ReviewsAuthor>\n                <ReviewsContent>{review.content}</ReviewsContent>\n            </ReviewsItem>\n            );\n        })}\n        </ReviewsList>\n        </ReviewsWrap>\n    );\n\n};\n\nexport default Reviews"],"names":["ReviewsWrap","styled","ReviewsList","ReviewsItem","ReviewsAuthor","ReviewsContent","useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","getReviewsInfo","response","movieReview","results","length","notification","console","log","map","review","author","content","id"],"sourceRoot":""}