{"version":3,"file":"static/js/597.dd26a822.chunk.js","mappings":"qLAEaA,EAAe,SAACC,GAAD,OACxBC,EAAAA,GAAAA,MAAYD,EAAU,CACtBE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,WATiB,C,2LCAfC,EAAOC,EAAAA,EAAAA,IAAH,yXAgBJC,EAAOD,EAAAA,EAAAA,KAAH,4LAUJE,EAAaF,EAAAA,EAAAA,OAAH,uWAmBVG,EAAYH,EAAAA,EAAAA,MAAH,wQ,SCGtB,EAxCkB,SAAC,GAAkB,IAAhBI,EAAe,EAAfA,SACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAmBA,OACI,SAACR,EAAD,WACI,UAACE,EAAD,CAAMO,KAAK,SAASJ,SAfP,SAACK,GAClBA,EAAEC,iBAEY,KAAVJ,GAKJF,EAASE,EAAMK,OAAOC,eACtBL,EAAS,MALLpB,EAAAA,EAAAA,GAAa,gEAMpB,EAKO,WACI,SAACe,EAAD,WACI,SAAC,MAAD,CAAYW,KAAK,UAGrB,SAACV,EAAD,CACIW,SAzBK,SAACL,GAClBF,EAASE,EAAEM,OAAOT,MACrB,EAwBeE,KAAK,OACLQ,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZZ,MAAOA,QAK1B,E,6BC7CYa,EAAanB,EAAAA,EAAAA,IAAH,oHCevB,EAfe,WACX,OACA,SAACmB,EAAD,WACI,SAAC,IAAD,CACAC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,SAAS,KAIhB,E,UCdYC,EAAW1B,EAAAA,EAAAA,GAAH,wRAUR2B,EAAY3B,EAAAA,EAAAA,IAAH,uKAUT4B,EAAY5B,EAAAA,EAAAA,GAAH,kHCStB,EAxBqB,SAAC,GAAe,IAAb6B,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MACjB,OACA,+BACI,SAACL,EAAD,WACA,UAAC,KAAD,CAAMM,GAAE,UAAKH,EAAMI,IAAMC,MAAO,CAAEC,KAAML,GAAxC,WACI,SAACH,EAAD,CACAS,IACIP,EAAMQ,YAAN,yCACoCR,EAAMQ,aACxCC,EAENC,IAAI,SAEJ,SAACX,EAAD,UAAaC,EAAMW,YAVRX,IAetB,ECxBYY,EAAczC,EAAAA,EAAAA,GAAH,mSCcxB,I,EAAA,EAVA,YAA8B,IAAX0C,EAAU,EAAVA,OACf,OACA,SAACD,EAAD,UACKC,EAAOC,KAAI,SAAAd,GAAK,OACjB,SAAC,EAAD,CAA6BA,MAAOA,GAAjBA,EAAMI,GADR,KAKxB,ECZYW,EAAmB5C,EAAAA,EAAAA,IAAH,0BC6E7B,EArEe,WAAO,IAAD,EAEjB,GAAwBK,EAAAA,EAAAA,UAAS,GAAjC,eAAOwC,EAAP,KAAaC,EAAb,KACA,GAAkCzC,EAAAA,EAAAA,WAAS,GAA3C,eAAO0C,EAAP,KAAkBC,EAAlB,KACA,GAA4B3C,EAAAA,EAAAA,UAAS,IAArC,eAAOqC,EAAP,KAAeO,EAAf,KACA,GAA0B5C,EAAAA,EAAAA,UAAS,MAAnC,eAAO6C,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACV,GAAc,KAAVF,EAAJ,CAEA,IAAMG,EAAU,mCAAG,gHAEQC,EAAAA,EAAAA,IAAYJ,EAAOV,GAF3B,UAETe,EAFS,OAKa,KAFtBC,EAAeD,EAASE,SAEbC,OALF,0CAMJ5E,EAAAA,EAAAA,GAAa,6BAAD,OAA8BoE,EAA9B,OANR,OASfN,EAAUY,GATK,mDAWf1E,EAAAA,EAAAA,GAAa,oCAXE,yBAaf6D,GAAa,GAbE,6EAAH,qDAgBhBU,GAlBwB,CAmBvB,GAAE,CAACH,EAAOV,IAoBX,OACI,iCACI,UAACD,EAAD,YACI,SAAC,EAAD,CAAWxC,SArBF,SAAA4D,GACG,KAApBA,EAASrD,OAGFqD,IAAaT,GAKxBT,EAAQ,GAERG,EAAU,IACVE,EAAS,MACTH,GAAa,GACbM,EAAgB,CAAEC,MAAOS,MATrB7E,EAAAA,EAAAA,GAAa,uBAHbA,EAAAA,EAAAA,GAAa,iBAahB,IAOQ+D,IAAS,yBAAMA,IACG,IAAlBR,EAAOqB,QAA0B,KAAVR,IAC5B,iCACQ,SAAC,EAAD,CAASb,OAAQA,IACpBK,IAAa,SAAC,EAAD,OAGbA,IAAa,SAAC,EAAD,QAEd,SAAC,KAAD,MAIX,C","sources":["components/Norification/Notification.js","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/GalleryItems/GalleryItems.styled.jsx","components/GalleryItems/GalleryItems.jsx","components/Gallery/Gallery.styled.jsx","components/Gallery/Gallery.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { toast } from 'react-toastify';\n\nexport const notification = (message) =>\n    toast.error(message , {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n});","import styled from \"@emotion/styled\";\n\nexport const Wrap = styled.div`\n    position: sticky;\n    z-index: 1100;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 64px;\n    padding-right: 24px;\n    padding-left: 24px;\n    margin-left: 150px;\n    margin-right: 150px;\n    background-color: #b8a4f4;\n    border-bottom-left-radius: 10px;\n    border-bottom-right-radius: 10px;\n`;\n\t\nexport const Form = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n`;\n\nexport const FormButton = styled.button`\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n\n    :hover {\n    opacity: 1;\n}\n`;\n\n\nexport const FormInput = styled.input`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n\n::placeholder {\n    font: inherit;\n    font-size: 18px;\n}\n`;","import { notification } from 'components/Norification/Notification';\nimport { useState } from 'react';\nimport { FcFilmReel } from 'react-icons/fc';\nimport {\n    Form,\n    FormButton,\n    FormInput,\n    Wrap,\n} from './SearchBox.styled';\n\nconst Searchbar = ({ onSubmit }) => {\n    const [value, setValue] = useState('');\n\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (value === '') {\n            notification('The search input cannot be empty. Please enter a search query');\n            return;\n        }\n\n        onSubmit(value.trim().toLowerCase());\n        setValue('');\n    };\n\n\n    return (\n        <Wrap>\n            <Form type=\"submit\" onSubmit={handleSubmit}>\n                <FormButton>\n                    <FcFilmReel size=\"30\" />\n                </FormButton>\n\n                <FormInput\n                    onChange={handleChange}\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movies\"\n                    value={value}\n                />\n            </Form>\n        </Wrap>\n    );\n};\n\nexport default Searchbar;","import styled from '@emotion/styled';\n\n\nexport const LoaderWrap = styled.div`\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center; \n`;\n\n","import { FidgetSpinner } from 'react-loader-spinner';\nimport { LoaderWrap} from './Loader.styled';\n\nconst Loader = () => {\n    return (\n    <LoaderWrap>\n        <FidgetSpinner\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#000000\"\n        ariaLabel=\"three-dots-loading\"\n        visible={true}\n        />\n    </LoaderWrap>\n    );\n};\n\nexport default Loader;","import styled from '@emotion/styled';\n\nexport const ListCard = styled.li`\n    border-radius: 2px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n    padding: 16px;\n    background-color: #b8a4f4;\n    &:hover {\n    transform: scale(1.01);\n    }\n`;\n\nexport const PhotoCard = styled.img`\n    &.hover {\n        transform: scale(1.03);\n        cursor: zoom-in;\n    }\n    width: 100%;\n    height: auto;\n    border-radius: 4px;\n`;\n\nexport const TitleCard = styled.h3`\n    font-size: 18px;\n    font-weight: bold;\n    color: #333333;\n    margin-top: 12px;\n`;\n\n\n\n","import { Link, useLocation } from 'react-router-dom';\nimport zahlushka from '../../Images/zahlushka.jpg';\n\n\nimport PropTypes from 'prop-types';\nimport { ListCard, PhotoCard, TitleCard } from './GalleryItems.styled';\n\nconst GalleryItems = ({ movie }) => {\n    const location = useLocation();\n    return (\n    <>\n        <ListCard key={movie}>\n        <Link to={`${movie.id}`} state={{ from: location }}>\n            <PhotoCard\n            src={\n                movie.poster_path\n                ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n                : zahlushka\n            }\n            alt=\"img\"\n            />\n            <TitleCard>{ movie.title }</TitleCard>\n        </Link>\n        </ListCard>\n    </>\n    );\n};\nGalleryItems.propTypes = {\n    item: PropTypes.object,\n};\n\nexport default GalleryItems;","import styled from '@emotion/styled';\n\nexport const GalleryList = styled.ul`\n    display: grid;\n    max-width: 1200px;\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    grid-gap: 16px;\n    margin-top: 20px;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;","\nimport GalleryItems from 'components/GalleryItems/GalleryItems';\nimport PropTypes from 'prop-types';\nimport { GalleryList } from './Gallery.styled';\n\n\nfunction Gallery({ movies }) {\n    return (\n    <GalleryList>\n        {movies.map(movie => (\n        <GalleryItems key={movie.id} movie={movie} />\n        ))}\n    </GalleryList>\n    );\n}\n\nexport default Gallery;\n\nGallery.propTypes = {\n    items: PropTypes.array,\n};","import styled from '@emotion/styled';\n\nexport const MovieGalleryWrap = styled.div`\n\n`;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Searchbar from \"components/SearchBox/SearchBox\";\nimport { Outlet } from \"react-router-dom\";\nimport { getBySearch } from 'Services/getMovies';\nimport Loader from 'components/Loader/Loader';\nimport Gallery from 'components/Gallery/Gallery';\nimport { MovieGalleryWrap } from './Movies.styled';\nimport { notification } from 'components/Norification/Notification';\n\nconst Movies = () => {\n\n    const [page, setPage] = useState(1);\n    const [isLoading, setIsLoading] = useState(false);\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? '';\n\n    useEffect(() => {\n    if (query === '') return;\n\n    const getByQuery = async () => {\n        try {\n        const response = await getBySearch(query, page);\n        const searchMovies = response.results;\n\n        if (searchMovies.length === 0) {\n            return notification(`No results were found for ${query}!`);\n        }\n\n        setMovies(searchMovies);\n        } catch (error) {\n        notification('Something went wrong. Try again.');\n        } finally {\n        setIsLoading(false);\n        }\n    };\n    getByQuery();\n    }, [query, page]);\n\n    const handleSubmit = newQuery => {\n    if (newQuery.trim() === '') {\n        notification('Nothing found!');\n        return;\n    } else if (newQuery === query) {\n        notification('Enter a new movie!');\n        return;\n    }\n\n    setPage(1);\n\n    setMovies([]);\n    setError(null);\n    setIsLoading(true);\n    setSearchParams({ query: newQuery });\n    };\n\n\n    return (\n        <>\n            <MovieGalleryWrap>\n                <Searchbar onSubmit={handleSubmit} />\n            {error && <div>{error}</div>}\n            {movies.length !== 0 && query !== '' && (\n        <>\n                <Gallery movies={movies} />\n            {isLoading && <Loader />}\n        </>\n        )}\n            {isLoading && <Loader />}\n            </MovieGalleryWrap>\n            <Outlet />\n        </> \n    );\n\n};\n\nexport default Movies"],"names":["notification","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","Wrap","styled","Form","FormButton","FormInput","onSubmit","useState","value","setValue","type","e","preventDefault","trim","toLowerCase","size","onChange","target","autoComplete","autoFocus","placeholder","LoaderWrap","height","width","radius","color","ariaLabel","visible","ListCard","PhotoCard","TitleCard","movie","location","useLocation","to","id","state","from","src","poster_path","zahlushka","alt","title","GalleryList","movies","map","MovieGalleryWrap","page","setPage","isLoading","setIsLoading","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getByQuery","getBySearch","response","searchMovies","results","length","newQuery"],"sourceRoot":""}